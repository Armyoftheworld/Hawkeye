package com.juziwl.commonlibrary.dao;

import android.database.Cursor;
import android.database.sqlite.SQLiteStatement;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.Property;
import org.greenrobot.greendao.internal.DaoConfig;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.database.DatabaseStatement;

import com.juziwl.commonlibrary.model.OnlineSchool;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
/** 
 * DAO for table "ONLINE_SCHOOL".
*/
public class OnlineSchoolDao extends AbstractDao<OnlineSchool, Long> {

    public static final String TABLENAME = "ONLINE_SCHOOL";

    /**
     * Properties of entity OnlineSchool.<br/>
     * Can be used for QueryBuilder and for referencing column names.
     */
    public static class Properties {
        public final static Property Id = new Property(0, Long.class, "id", true, "_id");
        public final static Property P_id = new Property(1, String.class, "p_id", false, "P_ID");
        public final static Property S_mail = new Property(2, String.class, "s_mail", false, "S_MAIL");
        public final static Property S_account = new Property(3, String.class, "s_account", false, "S_ACCOUNT");
        public final static Property S_phone = new Property(4, String.class, "s_phone", false, "S_PHONE");
        public final static Property S_xiaoxin_code = new Property(5, String.class, "s_xiaoxin_code", false, "S_XIAOXIN_CODE");
        public final static Property S_name = new Property(6, String.class, "s_name", false, "S_NAME");
        public final static Property S_img = new Property(7, String.class, "s_img", false, "S_IMG");
        public final static Property S_type = new Property(8, String.class, "s_type", false, "S_TYPE");
        public final static Property S_principal = new Property(9, String.class, "s_principal", false, "S_PRINCIPAL");
        public final static Property S_identity = new Property(10, String.class, "s_identity", false, "S_IDENTITY");
        public final static Property S_auth_status = new Property(11, String.class, "s_auth_status", false, "S_AUTH_STATUS");
        public final static Property S_auth_time = new Property(12, String.class, "s_auth_time", false, "S_AUTH_TIME");
        public final static Property S_desc = new Property(13, String.class, "s_desc", false, "S_DESC");
        public final static Property S_blance = new Property(14, String.class, "s_blance", false, "S_BLANCE");
        public final static Property S_province = new Property(15, String.class, "s_province", false, "S_PROVINCE");
        public final static Property S_city = new Property(16, String.class, "s_city", false, "S_CITY");
        public final static Property S_area = new Property(17, String.class, "s_area", false, "S_AREA");
        public final static Property S_addr = new Property(18, String.class, "s_addr", false, "S_ADDR");
        public final static Property S_state = new Property(19, String.class, "s_state", false, "S_STATE");
        public final static Property S_login_time = new Property(20, String.class, "s_login_time", false, "S_LOGIN_TIME");
        public final static Property S_create_time = new Property(21, String.class, "s_create_time", false, "S_CREATE_TIME");
        public final static Property S_update_time = new Property(22, String.class, "s_update_time", false, "S_UPDATE_TIME");
        public final static Property S_isAudit = new Property(23, String.class, "s_isAudit", false, "S_IS_AUDIT");
        public final static Property S_user_num = new Property(24, String.class, "s_user_num", false, "S_USER_NUM");
        public final static Property S_report_num = new Property(25, String.class, "s_report_num", false, "S_REPORT_NUM");
        public final static Property S_point = new Property(26, String.class, "s_point", false, "S_POINT");
        public final static Property S_rank = new Property(27, String.class, "s_rank", false, "S_RANK");
        public final static Property S_grand = new Property(28, String.class, "s_grand", false, "S_GRAND");
        public final static Property IsFollow = new Property(29, String.class, "isFollow", false, "IS_FOLLOW");
        public final static Property Tedian = new Property(30, String.class, "tedian", false, "TEDIAN");
        public final static Property Pinyin = new Property(31, String.class, "pinyin", false, "PINYIN");
        public final static Property StaticPath = new Property(32, String.class, "staticPath", false, "STATIC_PATH");
        public final static Property ReceiveMsg = new Property(33, Integer.class, "receiveMsg", false, "RECEIVE_MSG");
        public final static Property IsFromHistory = new Property(34, Boolean.class, "isFromHistory", false, "IS_FROM_HISTORY");
        public final static Property MsgNum = new Property(35, Integer.class, "msgNum", false, "MSG_NUM");
        public final static Property IsDoCancelFollow = new Property(36, Boolean.class, "isDoCancelFollow", false, "IS_DO_CANCEL_FOLLOW");
        public final static Property Mid = new Property(37, String.class, "mid", false, "MID");
    }


    public OnlineSchoolDao(DaoConfig config) {
        super(config);
    }
    
    public OnlineSchoolDao(DaoConfig config, DaoSession daoSession) {
        super(config, daoSession);
    }

    /** Creates the underlying database table. */
    public static void createTable(Database db, boolean ifNotExists) {
        String constraint = ifNotExists? "IF NOT EXISTS ": "";
        db.execSQL("CREATE TABLE " + constraint + "\"ONLINE_SCHOOL\" (" + //
                "\"_id\" INTEGER PRIMARY KEY AUTOINCREMENT ," + // 0: id
                "\"P_ID\" TEXT," + // 1: p_id
                "\"S_MAIL\" TEXT," + // 2: s_mail
                "\"S_ACCOUNT\" TEXT," + // 3: s_account
                "\"S_PHONE\" TEXT," + // 4: s_phone
                "\"S_XIAOXIN_CODE\" TEXT," + // 5: s_xiaoxin_code
                "\"S_NAME\" TEXT," + // 6: s_name
                "\"S_IMG\" TEXT," + // 7: s_img
                "\"S_TYPE\" TEXT," + // 8: s_type
                "\"S_PRINCIPAL\" TEXT," + // 9: s_principal
                "\"S_IDENTITY\" TEXT," + // 10: s_identity
                "\"S_AUTH_STATUS\" TEXT," + // 11: s_auth_status
                "\"S_AUTH_TIME\" TEXT," + // 12: s_auth_time
                "\"S_DESC\" TEXT," + // 13: s_desc
                "\"S_BLANCE\" TEXT," + // 14: s_blance
                "\"S_PROVINCE\" TEXT," + // 15: s_province
                "\"S_CITY\" TEXT," + // 16: s_city
                "\"S_AREA\" TEXT," + // 17: s_area
                "\"S_ADDR\" TEXT," + // 18: s_addr
                "\"S_STATE\" TEXT," + // 19: s_state
                "\"S_LOGIN_TIME\" TEXT," + // 20: s_login_time
                "\"S_CREATE_TIME\" TEXT," + // 21: s_create_time
                "\"S_UPDATE_TIME\" TEXT," + // 22: s_update_time
                "\"S_IS_AUDIT\" TEXT," + // 23: s_isAudit
                "\"S_USER_NUM\" TEXT," + // 24: s_user_num
                "\"S_REPORT_NUM\" TEXT," + // 25: s_report_num
                "\"S_POINT\" TEXT," + // 26: s_point
                "\"S_RANK\" TEXT," + // 27: s_rank
                "\"S_GRAND\" TEXT," + // 28: s_grand
                "\"IS_FOLLOW\" TEXT," + // 29: isFollow
                "\"TEDIAN\" TEXT," + // 30: tedian
                "\"PINYIN\" TEXT," + // 31: pinyin
                "\"STATIC_PATH\" TEXT," + // 32: staticPath
                "\"RECEIVE_MSG\" INTEGER," + // 33: receiveMsg
                "\"IS_FROM_HISTORY\" INTEGER," + // 34: isFromHistory
                "\"MSG_NUM\" INTEGER," + // 35: msgNum
                "\"IS_DO_CANCEL_FOLLOW\" INTEGER," + // 36: isDoCancelFollow
                "\"MID\" TEXT);"); // 37: mid
    }

    /** Drops the underlying database table. */
    public static void dropTable(Database db, boolean ifExists) {
        String sql = "DROP TABLE " + (ifExists ? "IF EXISTS " : "") + "\"ONLINE_SCHOOL\"";
        db.execSQL(sql);
    }

    @Override
    protected final void bindValues(DatabaseStatement stmt, OnlineSchool entity) {
        stmt.clearBindings();
 
        Long id = entity.getId();
        if (id != null) {
            stmt.bindLong(1, id);
        }
 
        String p_id = entity.getP_id();
        if (p_id != null) {
            stmt.bindString(2, p_id);
        }
 
        String s_mail = entity.getS_mail();
        if (s_mail != null) {
            stmt.bindString(3, s_mail);
        }
 
        String s_account = entity.getS_account();
        if (s_account != null) {
            stmt.bindString(4, s_account);
        }
 
        String s_phone = entity.getS_phone();
        if (s_phone != null) {
            stmt.bindString(5, s_phone);
        }
 
        String s_xiaoxin_code = entity.getS_xiaoxin_code();
        if (s_xiaoxin_code != null) {
            stmt.bindString(6, s_xiaoxin_code);
        }
 
        String s_name = entity.getS_name();
        if (s_name != null) {
            stmt.bindString(7, s_name);
        }
 
        String s_img = entity.getS_img();
        if (s_img != null) {
            stmt.bindString(8, s_img);
        }
 
        String s_type = entity.getS_type();
        if (s_type != null) {
            stmt.bindString(9, s_type);
        }
 
        String s_principal = entity.getS_principal();
        if (s_principal != null) {
            stmt.bindString(10, s_principal);
        }
 
        String s_identity = entity.getS_identity();
        if (s_identity != null) {
            stmt.bindString(11, s_identity);
        }
 
        String s_auth_status = entity.getS_auth_status();
        if (s_auth_status != null) {
            stmt.bindString(12, s_auth_status);
        }
 
        String s_auth_time = entity.getS_auth_time();
        if (s_auth_time != null) {
            stmt.bindString(13, s_auth_time);
        }
 
        String s_desc = entity.getS_desc();
        if (s_desc != null) {
            stmt.bindString(14, s_desc);
        }
 
        String s_blance = entity.getS_blance();
        if (s_blance != null) {
            stmt.bindString(15, s_blance);
        }
 
        String s_province = entity.getS_province();
        if (s_province != null) {
            stmt.bindString(16, s_province);
        }
 
        String s_city = entity.getS_city();
        if (s_city != null) {
            stmt.bindString(17, s_city);
        }
 
        String s_area = entity.getS_area();
        if (s_area != null) {
            stmt.bindString(18, s_area);
        }
 
        String s_addr = entity.getS_addr();
        if (s_addr != null) {
            stmt.bindString(19, s_addr);
        }
 
        String s_state = entity.getS_state();
        if (s_state != null) {
            stmt.bindString(20, s_state);
        }
 
        String s_login_time = entity.getS_login_time();
        if (s_login_time != null) {
            stmt.bindString(21, s_login_time);
        }
 
        String s_create_time = entity.getS_create_time();
        if (s_create_time != null) {
            stmt.bindString(22, s_create_time);
        }
 
        String s_update_time = entity.getS_update_time();
        if (s_update_time != null) {
            stmt.bindString(23, s_update_time);
        }
 
        String s_isAudit = entity.getS_isAudit();
        if (s_isAudit != null) {
            stmt.bindString(24, s_isAudit);
        }
 
        String s_user_num = entity.getS_user_num();
        if (s_user_num != null) {
            stmt.bindString(25, s_user_num);
        }
 
        String s_report_num = entity.getS_report_num();
        if (s_report_num != null) {
            stmt.bindString(26, s_report_num);
        }
 
        String s_point = entity.getS_point();
        if (s_point != null) {
            stmt.bindString(27, s_point);
        }
 
        String s_rank = entity.getS_rank();
        if (s_rank != null) {
            stmt.bindString(28, s_rank);
        }
 
        String s_grand = entity.getS_grand();
        if (s_grand != null) {
            stmt.bindString(29, s_grand);
        }
 
        String isFollow = entity.getIsFollow();
        if (isFollow != null) {
            stmt.bindString(30, isFollow);
        }
 
        String tedian = entity.getTedian();
        if (tedian != null) {
            stmt.bindString(31, tedian);
        }
 
        String pinyin = entity.getPinyin();
        if (pinyin != null) {
            stmt.bindString(32, pinyin);
        }
 
        String staticPath = entity.getStaticPath();
        if (staticPath != null) {
            stmt.bindString(33, staticPath);
        }
 
        Integer receiveMsg = entity.getReceiveMsg();
        if (receiveMsg != null) {
            stmt.bindLong(34, receiveMsg);
        }
 
        Boolean isFromHistory = entity.getIsFromHistory();
        if (isFromHistory != null) {
            stmt.bindLong(35, isFromHistory ? 1L: 0L);
        }
 
        Integer msgNum = entity.getMsgNum();
        if (msgNum != null) {
            stmt.bindLong(36, msgNum);
        }
 
        Boolean isDoCancelFollow = entity.getIsDoCancelFollow();
        if (isDoCancelFollow != null) {
            stmt.bindLong(37, isDoCancelFollow ? 1L: 0L);
        }
 
        String mid = entity.getMid();
        if (mid != null) {
            stmt.bindString(38, mid);
        }
    }

    @Override
    protected final void bindValues(SQLiteStatement stmt, OnlineSchool entity) {
        stmt.clearBindings();
 
        Long id = entity.getId();
        if (id != null) {
            stmt.bindLong(1, id);
        }
 
        String p_id = entity.getP_id();
        if (p_id != null) {
            stmt.bindString(2, p_id);
        }
 
        String s_mail = entity.getS_mail();
        if (s_mail != null) {
            stmt.bindString(3, s_mail);
        }
 
        String s_account = entity.getS_account();
        if (s_account != null) {
            stmt.bindString(4, s_account);
        }
 
        String s_phone = entity.getS_phone();
        if (s_phone != null) {
            stmt.bindString(5, s_phone);
        }
 
        String s_xiaoxin_code = entity.getS_xiaoxin_code();
        if (s_xiaoxin_code != null) {
            stmt.bindString(6, s_xiaoxin_code);
        }
 
        String s_name = entity.getS_name();
        if (s_name != null) {
            stmt.bindString(7, s_name);
        }
 
        String s_img = entity.getS_img();
        if (s_img != null) {
            stmt.bindString(8, s_img);
        }
 
        String s_type = entity.getS_type();
        if (s_type != null) {
            stmt.bindString(9, s_type);
        }
 
        String s_principal = entity.getS_principal();
        if (s_principal != null) {
            stmt.bindString(10, s_principal);
        }
 
        String s_identity = entity.getS_identity();
        if (s_identity != null) {
            stmt.bindString(11, s_identity);
        }
 
        String s_auth_status = entity.getS_auth_status();
        if (s_auth_status != null) {
            stmt.bindString(12, s_auth_status);
        }
 
        String s_auth_time = entity.getS_auth_time();
        if (s_auth_time != null) {
            stmt.bindString(13, s_auth_time);
        }
 
        String s_desc = entity.getS_desc();
        if (s_desc != null) {
            stmt.bindString(14, s_desc);
        }
 
        String s_blance = entity.getS_blance();
        if (s_blance != null) {
            stmt.bindString(15, s_blance);
        }
 
        String s_province = entity.getS_province();
        if (s_province != null) {
            stmt.bindString(16, s_province);
        }
 
        String s_city = entity.getS_city();
        if (s_city != null) {
            stmt.bindString(17, s_city);
        }
 
        String s_area = entity.getS_area();
        if (s_area != null) {
            stmt.bindString(18, s_area);
        }
 
        String s_addr = entity.getS_addr();
        if (s_addr != null) {
            stmt.bindString(19, s_addr);
        }
 
        String s_state = entity.getS_state();
        if (s_state != null) {
            stmt.bindString(20, s_state);
        }
 
        String s_login_time = entity.getS_login_time();
        if (s_login_time != null) {
            stmt.bindString(21, s_login_time);
        }
 
        String s_create_time = entity.getS_create_time();
        if (s_create_time != null) {
            stmt.bindString(22, s_create_time);
        }
 
        String s_update_time = entity.getS_update_time();
        if (s_update_time != null) {
            stmt.bindString(23, s_update_time);
        }
 
        String s_isAudit = entity.getS_isAudit();
        if (s_isAudit != null) {
            stmt.bindString(24, s_isAudit);
        }
 
        String s_user_num = entity.getS_user_num();
        if (s_user_num != null) {
            stmt.bindString(25, s_user_num);
        }
 
        String s_report_num = entity.getS_report_num();
        if (s_report_num != null) {
            stmt.bindString(26, s_report_num);
        }
 
        String s_point = entity.getS_point();
        if (s_point != null) {
            stmt.bindString(27, s_point);
        }
 
        String s_rank = entity.getS_rank();
        if (s_rank != null) {
            stmt.bindString(28, s_rank);
        }
 
        String s_grand = entity.getS_grand();
        if (s_grand != null) {
            stmt.bindString(29, s_grand);
        }
 
        String isFollow = entity.getIsFollow();
        if (isFollow != null) {
            stmt.bindString(30, isFollow);
        }
 
        String tedian = entity.getTedian();
        if (tedian != null) {
            stmt.bindString(31, tedian);
        }
 
        String pinyin = entity.getPinyin();
        if (pinyin != null) {
            stmt.bindString(32, pinyin);
        }
 
        String staticPath = entity.getStaticPath();
        if (staticPath != null) {
            stmt.bindString(33, staticPath);
        }
 
        Integer receiveMsg = entity.getReceiveMsg();
        if (receiveMsg != null) {
            stmt.bindLong(34, receiveMsg);
        }
 
        Boolean isFromHistory = entity.getIsFromHistory();
        if (isFromHistory != null) {
            stmt.bindLong(35, isFromHistory ? 1L: 0L);
        }
 
        Integer msgNum = entity.getMsgNum();
        if (msgNum != null) {
            stmt.bindLong(36, msgNum);
        }
 
        Boolean isDoCancelFollow = entity.getIsDoCancelFollow();
        if (isDoCancelFollow != null) {
            stmt.bindLong(37, isDoCancelFollow ? 1L: 0L);
        }
 
        String mid = entity.getMid();
        if (mid != null) {
            stmt.bindString(38, mid);
        }
    }

    @Override
    public Long readKey(Cursor cursor, int offset) {
        return cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0);
    }    

    @Override
    public OnlineSchool readEntity(Cursor cursor, int offset) {
        OnlineSchool entity = new OnlineSchool( //
            cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0), // id
            cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1), // p_id
            cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2), // s_mail
            cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3), // s_account
            cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4), // s_phone
            cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5), // s_xiaoxin_code
            cursor.isNull(offset + 6) ? null : cursor.getString(offset + 6), // s_name
            cursor.isNull(offset + 7) ? null : cursor.getString(offset + 7), // s_img
            cursor.isNull(offset + 8) ? null : cursor.getString(offset + 8), // s_type
            cursor.isNull(offset + 9) ? null : cursor.getString(offset + 9), // s_principal
            cursor.isNull(offset + 10) ? null : cursor.getString(offset + 10), // s_identity
            cursor.isNull(offset + 11) ? null : cursor.getString(offset + 11), // s_auth_status
            cursor.isNull(offset + 12) ? null : cursor.getString(offset + 12), // s_auth_time
            cursor.isNull(offset + 13) ? null : cursor.getString(offset + 13), // s_desc
            cursor.isNull(offset + 14) ? null : cursor.getString(offset + 14), // s_blance
            cursor.isNull(offset + 15) ? null : cursor.getString(offset + 15), // s_province
            cursor.isNull(offset + 16) ? null : cursor.getString(offset + 16), // s_city
            cursor.isNull(offset + 17) ? null : cursor.getString(offset + 17), // s_area
            cursor.isNull(offset + 18) ? null : cursor.getString(offset + 18), // s_addr
            cursor.isNull(offset + 19) ? null : cursor.getString(offset + 19), // s_state
            cursor.isNull(offset + 20) ? null : cursor.getString(offset + 20), // s_login_time
            cursor.isNull(offset + 21) ? null : cursor.getString(offset + 21), // s_create_time
            cursor.isNull(offset + 22) ? null : cursor.getString(offset + 22), // s_update_time
            cursor.isNull(offset + 23) ? null : cursor.getString(offset + 23), // s_isAudit
            cursor.isNull(offset + 24) ? null : cursor.getString(offset + 24), // s_user_num
            cursor.isNull(offset + 25) ? null : cursor.getString(offset + 25), // s_report_num
            cursor.isNull(offset + 26) ? null : cursor.getString(offset + 26), // s_point
            cursor.isNull(offset + 27) ? null : cursor.getString(offset + 27), // s_rank
            cursor.isNull(offset + 28) ? null : cursor.getString(offset + 28), // s_grand
            cursor.isNull(offset + 29) ? null : cursor.getString(offset + 29), // isFollow
            cursor.isNull(offset + 30) ? null : cursor.getString(offset + 30), // tedian
            cursor.isNull(offset + 31) ? null : cursor.getString(offset + 31), // pinyin
            cursor.isNull(offset + 32) ? null : cursor.getString(offset + 32), // staticPath
            cursor.isNull(offset + 33) ? null : cursor.getInt(offset + 33), // receiveMsg
            cursor.isNull(offset + 34) ? null : cursor.getShort(offset + 34) != 0, // isFromHistory
            cursor.isNull(offset + 35) ? null : cursor.getInt(offset + 35), // msgNum
            cursor.isNull(offset + 36) ? null : cursor.getShort(offset + 36) != 0, // isDoCancelFollow
            cursor.isNull(offset + 37) ? null : cursor.getString(offset + 37) // mid
        );
        return entity;
    }
     
    @Override
    public void readEntity(Cursor cursor, OnlineSchool entity, int offset) {
        entity.setId(cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0));
        entity.setP_id(cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1));
        entity.setS_mail(cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2));
        entity.setS_account(cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3));
        entity.setS_phone(cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4));
        entity.setS_xiaoxin_code(cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5));
        entity.setS_name(cursor.isNull(offset + 6) ? null : cursor.getString(offset + 6));
        entity.setS_img(cursor.isNull(offset + 7) ? null : cursor.getString(offset + 7));
        entity.setS_type(cursor.isNull(offset + 8) ? null : cursor.getString(offset + 8));
        entity.setS_principal(cursor.isNull(offset + 9) ? null : cursor.getString(offset + 9));
        entity.setS_identity(cursor.isNull(offset + 10) ? null : cursor.getString(offset + 10));
        entity.setS_auth_status(cursor.isNull(offset + 11) ? null : cursor.getString(offset + 11));
        entity.setS_auth_time(cursor.isNull(offset + 12) ? null : cursor.getString(offset + 12));
        entity.setS_desc(cursor.isNull(offset + 13) ? null : cursor.getString(offset + 13));
        entity.setS_blance(cursor.isNull(offset + 14) ? null : cursor.getString(offset + 14));
        entity.setS_province(cursor.isNull(offset + 15) ? null : cursor.getString(offset + 15));
        entity.setS_city(cursor.isNull(offset + 16) ? null : cursor.getString(offset + 16));
        entity.setS_area(cursor.isNull(offset + 17) ? null : cursor.getString(offset + 17));
        entity.setS_addr(cursor.isNull(offset + 18) ? null : cursor.getString(offset + 18));
        entity.setS_state(cursor.isNull(offset + 19) ? null : cursor.getString(offset + 19));
        entity.setS_login_time(cursor.isNull(offset + 20) ? null : cursor.getString(offset + 20));
        entity.setS_create_time(cursor.isNull(offset + 21) ? null : cursor.getString(offset + 21));
        entity.setS_update_time(cursor.isNull(offset + 22) ? null : cursor.getString(offset + 22));
        entity.setS_isAudit(cursor.isNull(offset + 23) ? null : cursor.getString(offset + 23));
        entity.setS_user_num(cursor.isNull(offset + 24) ? null : cursor.getString(offset + 24));
        entity.setS_report_num(cursor.isNull(offset + 25) ? null : cursor.getString(offset + 25));
        entity.setS_point(cursor.isNull(offset + 26) ? null : cursor.getString(offset + 26));
        entity.setS_rank(cursor.isNull(offset + 27) ? null : cursor.getString(offset + 27));
        entity.setS_grand(cursor.isNull(offset + 28) ? null : cursor.getString(offset + 28));
        entity.setIsFollow(cursor.isNull(offset + 29) ? null : cursor.getString(offset + 29));
        entity.setTedian(cursor.isNull(offset + 30) ? null : cursor.getString(offset + 30));
        entity.setPinyin(cursor.isNull(offset + 31) ? null : cursor.getString(offset + 31));
        entity.setStaticPath(cursor.isNull(offset + 32) ? null : cursor.getString(offset + 32));
        entity.setReceiveMsg(cursor.isNull(offset + 33) ? null : cursor.getInt(offset + 33));
        entity.setIsFromHistory(cursor.isNull(offset + 34) ? null : cursor.getShort(offset + 34) != 0);
        entity.setMsgNum(cursor.isNull(offset + 35) ? null : cursor.getInt(offset + 35));
        entity.setIsDoCancelFollow(cursor.isNull(offset + 36) ? null : cursor.getShort(offset + 36) != 0);
        entity.setMid(cursor.isNull(offset + 37) ? null : cursor.getString(offset + 37));
     }
    
    @Override
    protected final Long updateKeyAfterInsert(OnlineSchool entity, long rowId) {
        entity.setId(rowId);
        return rowId;
    }
    
    @Override
    public Long getKey(OnlineSchool entity) {
        if(entity != null) {
            return entity.getId();
        } else {
            return null;
        }
    }

    @Override
    public boolean hasKey(OnlineSchool entity) {
        return entity.getId() != null;
    }

    @Override
    protected final boolean isEntityUpdateable() {
        return true;
    }
    
}
