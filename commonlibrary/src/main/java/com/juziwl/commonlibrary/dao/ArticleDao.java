package com.juziwl.commonlibrary.dao;

import android.database.Cursor;
import android.database.sqlite.SQLiteStatement;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.Property;
import org.greenrobot.greendao.internal.DaoConfig;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.database.DatabaseStatement;

import com.juziwl.commonlibrary.model.Article;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
/** 
 * DAO for table "ARTICLE".
*/
public class ArticleDao extends AbstractDao<Article, Long> {

    public static final String TABLENAME = "ARTICLE";

    /**
     * Properties of entity Article.<br/>
     * Can be used for QueryBuilder and for referencing column names.
     */
    public static class Properties {
        public final static Property Id = new Property(0, Long.class, "id", true, "_id");
        public final static Property P_id = new Property(1, String.class, "p_id", false, "P_ID");
        public final static Property S_title = new Property(2, String.class, "s_title", false, "S_TITLE");
        public final static Property S_author = new Property(3, String.class, "s_author", false, "S_AUTHOR");
        public final static Property S_pic = new Property(4, String.class, "s_pic", false, "S_PIC");
        public final static Property S_category = new Property(5, String.class, "s_category", false, "S_CATEGORY");
        public final static Property S_tag = new Property(6, String.class, "s_tag", false, "S_TAG");
        public final static Property S_abstract = new Property(7, String.class, "s_abstract", false, "S_ABSTRACT");
        public final static Property S_html = new Property(8, String.class, "s_html", false, "S_HTML");
        public final static Property S_url = new Property(9, String.class, "s_url", false, "S_URL");
        public final static Property S_type = new Property(10, String.class, "s_type", false, "S_TYPE");
        public final static Property F_groups_id = new Property(11, String.class, "f_groups_id", false, "F_GROUPS_ID");
        public final static Property F_groups_layer = new Property(12, String.class, "f_groups_layer", false, "F_GROUPS_LAYER");
        public final static Property S_isdel = new Property(13, String.class, "s_isdel", false, "S_ISDEL");
        public final static Property S_read_num = new Property(14, Integer.class, "s_read_num", false, "S_READ_NUM");
        public final static Property S_click_num = new Property(15, Integer.class, "s_click_num", false, "S_CLICK_NUM");
        public final static Property S_forward_num = new Property(16, Integer.class, "s_forward_num", false, "S_FORWARD_NUM");
        public final static Property S_collect_num = new Property(17, Integer.class, "s_collect_num", false, "S_COLLECT_NUM");
        public final static Property S_like_num = new Property(18, Integer.class, "s_like_num", false, "S_LIKE_NUM");
        public final static Property S_adv_num = new Property(19, Integer.class, "s_adv_num", false, "S_ADV_NUM");
        public final static Property S_reward_num = new Property(20, Integer.class, "s_reward_num", false, "S_REWARD_NUM");
        public final static Property S_creator = new Property(21, String.class, "s_creator", false, "S_CREATOR");
        public final static Property S_creater_time = new Property(22, String.class, "s_creater_time", false, "S_CREATER_TIME");
        public final static Property S_update_time = new Property(23, String.class, "s_update_time", false, "S_UPDATE_TIME");
        public final static Property S_isPerm = new Property(24, Integer.class, "s_isPerm", false, "S_IS_PERM");
        public final static Property FileName = new Property(25, String.class, "fileName", false, "FILE_NAME");
        public final static Property FileSize = new Property(26, Integer.class, "fileSize", false, "FILE_SIZE");
        public final static Property PlatId = new Property(27, String.class, "platId", false, "PLAT_ID");
        public final static Property PlatName = new Property(28, String.class, "platName", false, "PLAT_NAME");
        public final static Property PlatImg = new Property(29, String.class, "platImg", false, "PLAT_IMG");
        public final static Property CollectId = new Property(30, String.class, "collectId", false, "COLLECT_ID");
        public final static Property LikeId = new Property(31, String.class, "likeId", false, "LIKE_ID");
        public final static Property ReadId = new Property(32, String.class, "readId", false, "READ_ID");
        public final static Property IsTuiguang = new Property(33, String.class, "isTuiguang", false, "IS_TUIGUANG");
        public final static Property IsLocalUpload = new Property(34, Integer.class, "isLocalUpload", false, "IS_LOCAL_UPLOAD");
        public final static Property Mid = new Property(35, String.class, "mid", false, "MID");
        public final static Property IsFollow = new Property(36, String.class, "isFollow", false, "IS_FOLLOW");
        public final static Property CommentId = new Property(37, String.class, "commentId", false, "COMMENT_ID");
        public final static Property S_comment_num = new Property(38, Integer.class, "s_comment_num", false, "S_COMMENT_NUM");
    }


    public ArticleDao(DaoConfig config) {
        super(config);
    }
    
    public ArticleDao(DaoConfig config, DaoSession daoSession) {
        super(config, daoSession);
    }

    /** Creates the underlying database table. */
    public static void createTable(Database db, boolean ifNotExists) {
        String constraint = ifNotExists? "IF NOT EXISTS ": "";
        db.execSQL("CREATE TABLE " + constraint + "\"ARTICLE\" (" + //
                "\"_id\" INTEGER PRIMARY KEY AUTOINCREMENT ," + // 0: id
                "\"P_ID\" TEXT," + // 1: p_id
                "\"S_TITLE\" TEXT," + // 2: s_title
                "\"S_AUTHOR\" TEXT," + // 3: s_author
                "\"S_PIC\" TEXT," + // 4: s_pic
                "\"S_CATEGORY\" TEXT," + // 5: s_category
                "\"S_TAG\" TEXT," + // 6: s_tag
                "\"S_ABSTRACT\" TEXT," + // 7: s_abstract
                "\"S_HTML\" TEXT," + // 8: s_html
                "\"S_URL\" TEXT," + // 9: s_url
                "\"S_TYPE\" TEXT," + // 10: s_type
                "\"F_GROUPS_ID\" TEXT," + // 11: f_groups_id
                "\"F_GROUPS_LAYER\" TEXT," + // 12: f_groups_layer
                "\"S_ISDEL\" TEXT," + // 13: s_isdel
                "\"S_READ_NUM\" INTEGER," + // 14: s_read_num
                "\"S_CLICK_NUM\" INTEGER," + // 15: s_click_num
                "\"S_FORWARD_NUM\" INTEGER," + // 16: s_forward_num
                "\"S_COLLECT_NUM\" INTEGER," + // 17: s_collect_num
                "\"S_LIKE_NUM\" INTEGER," + // 18: s_like_num
                "\"S_ADV_NUM\" INTEGER," + // 19: s_adv_num
                "\"S_REWARD_NUM\" INTEGER," + // 20: s_reward_num
                "\"S_CREATOR\" TEXT," + // 21: s_creator
                "\"S_CREATER_TIME\" TEXT," + // 22: s_creater_time
                "\"S_UPDATE_TIME\" TEXT," + // 23: s_update_time
                "\"S_IS_PERM\" INTEGER," + // 24: s_isPerm
                "\"FILE_NAME\" TEXT," + // 25: fileName
                "\"FILE_SIZE\" INTEGER," + // 26: fileSize
                "\"PLAT_ID\" TEXT," + // 27: platId
                "\"PLAT_NAME\" TEXT," + // 28: platName
                "\"PLAT_IMG\" TEXT," + // 29: platImg
                "\"COLLECT_ID\" TEXT," + // 30: collectId
                "\"LIKE_ID\" TEXT," + // 31: likeId
                "\"READ_ID\" TEXT," + // 32: readId
                "\"IS_TUIGUANG\" TEXT," + // 33: isTuiguang
                "\"IS_LOCAL_UPLOAD\" INTEGER," + // 34: isLocalUpload
                "\"MID\" TEXT," + // 35: mid
                "\"IS_FOLLOW\" TEXT," + // 36: isFollow
                "\"COMMENT_ID\" TEXT," + // 37: commentId
                "\"S_COMMENT_NUM\" INTEGER);"); // 38: s_comment_num
    }

    /** Drops the underlying database table. */
    public static void dropTable(Database db, boolean ifExists) {
        String sql = "DROP TABLE " + (ifExists ? "IF EXISTS " : "") + "\"ARTICLE\"";
        db.execSQL(sql);
    }

    @Override
    protected final void bindValues(DatabaseStatement stmt, Article entity) {
        stmt.clearBindings();
 
        Long id = entity.getId();
        if (id != null) {
            stmt.bindLong(1, id);
        }
 
        String p_id = entity.getP_id();
        if (p_id != null) {
            stmt.bindString(2, p_id);
        }
 
        String s_title = entity.getS_title();
        if (s_title != null) {
            stmt.bindString(3, s_title);
        }
 
        String s_author = entity.getS_author();
        if (s_author != null) {
            stmt.bindString(4, s_author);
        }
 
        String s_pic = entity.getS_pic();
        if (s_pic != null) {
            stmt.bindString(5, s_pic);
        }
 
        String s_category = entity.getS_category();
        if (s_category != null) {
            stmt.bindString(6, s_category);
        }
 
        String s_tag = entity.getS_tag();
        if (s_tag != null) {
            stmt.bindString(7, s_tag);
        }
 
        String s_abstract = entity.getS_abstract();
        if (s_abstract != null) {
            stmt.bindString(8, s_abstract);
        }
 
        String s_html = entity.getS_html();
        if (s_html != null) {
            stmt.bindString(9, s_html);
        }
 
        String s_url = entity.getS_url();
        if (s_url != null) {
            stmt.bindString(10, s_url);
        }
 
        String s_type = entity.getS_type();
        if (s_type != null) {
            stmt.bindString(11, s_type);
        }
 
        String f_groups_id = entity.getF_groups_id();
        if (f_groups_id != null) {
            stmt.bindString(12, f_groups_id);
        }
 
        String f_groups_layer = entity.getF_groups_layer();
        if (f_groups_layer != null) {
            stmt.bindString(13, f_groups_layer);
        }
 
        String s_isdel = entity.getS_isdel();
        if (s_isdel != null) {
            stmt.bindString(14, s_isdel);
        }
 
        Integer s_read_num = entity.getS_read_num();
        if (s_read_num != null) {
            stmt.bindLong(15, s_read_num);
        }
 
        Integer s_click_num = entity.getS_click_num();
        if (s_click_num != null) {
            stmt.bindLong(16, s_click_num);
        }
 
        Integer s_forward_num = entity.getS_forward_num();
        if (s_forward_num != null) {
            stmt.bindLong(17, s_forward_num);
        }
 
        Integer s_collect_num = entity.getS_collect_num();
        if (s_collect_num != null) {
            stmt.bindLong(18, s_collect_num);
        }
 
        Integer s_like_num = entity.getS_like_num();
        if (s_like_num != null) {
            stmt.bindLong(19, s_like_num);
        }
 
        Integer s_adv_num = entity.getS_adv_num();
        if (s_adv_num != null) {
            stmt.bindLong(20, s_adv_num);
        }
 
        Integer s_reward_num = entity.getS_reward_num();
        if (s_reward_num != null) {
            stmt.bindLong(21, s_reward_num);
        }
 
        String s_creator = entity.getS_creator();
        if (s_creator != null) {
            stmt.bindString(22, s_creator);
        }
 
        String s_creater_time = entity.getS_creater_time();
        if (s_creater_time != null) {
            stmt.bindString(23, s_creater_time);
        }
 
        String s_update_time = entity.getS_update_time();
        if (s_update_time != null) {
            stmt.bindString(24, s_update_time);
        }
 
        Integer s_isPerm = entity.getS_isPerm();
        if (s_isPerm != null) {
            stmt.bindLong(25, s_isPerm);
        }
 
        String fileName = entity.getFileName();
        if (fileName != null) {
            stmt.bindString(26, fileName);
        }
 
        Integer fileSize = entity.getFileSize();
        if (fileSize != null) {
            stmt.bindLong(27, fileSize);
        }
 
        String platId = entity.getPlatId();
        if (platId != null) {
            stmt.bindString(28, platId);
        }
 
        String platName = entity.getPlatName();
        if (platName != null) {
            stmt.bindString(29, platName);
        }
 
        String platImg = entity.getPlatImg();
        if (platImg != null) {
            stmt.bindString(30, platImg);
        }
 
        String collectId = entity.getCollectId();
        if (collectId != null) {
            stmt.bindString(31, collectId);
        }
 
        String likeId = entity.getLikeId();
        if (likeId != null) {
            stmt.bindString(32, likeId);
        }
 
        String readId = entity.getReadId();
        if (readId != null) {
            stmt.bindString(33, readId);
        }
 
        String isTuiguang = entity.getIsTuiguang();
        if (isTuiguang != null) {
            stmt.bindString(34, isTuiguang);
        }
 
        Integer isLocalUpload = entity.getIsLocalUpload();
        if (isLocalUpload != null) {
            stmt.bindLong(35, isLocalUpload);
        }
 
        String mid = entity.getMid();
        if (mid != null) {
            stmt.bindString(36, mid);
        }
 
        String isFollow = entity.getIsFollow();
        if (isFollow != null) {
            stmt.bindString(37, isFollow);
        }
 
        String commentId = entity.getCommentId();
        if (commentId != null) {
            stmt.bindString(38, commentId);
        }
 
        Integer s_comment_num = entity.getS_comment_num();
        if (s_comment_num != null) {
            stmt.bindLong(39, s_comment_num);
        }
    }

    @Override
    protected final void bindValues(SQLiteStatement stmt, Article entity) {
        stmt.clearBindings();
 
        Long id = entity.getId();
        if (id != null) {
            stmt.bindLong(1, id);
        }
 
        String p_id = entity.getP_id();
        if (p_id != null) {
            stmt.bindString(2, p_id);
        }
 
        String s_title = entity.getS_title();
        if (s_title != null) {
            stmt.bindString(3, s_title);
        }
 
        String s_author = entity.getS_author();
        if (s_author != null) {
            stmt.bindString(4, s_author);
        }
 
        String s_pic = entity.getS_pic();
        if (s_pic != null) {
            stmt.bindString(5, s_pic);
        }
 
        String s_category = entity.getS_category();
        if (s_category != null) {
            stmt.bindString(6, s_category);
        }
 
        String s_tag = entity.getS_tag();
        if (s_tag != null) {
            stmt.bindString(7, s_tag);
        }
 
        String s_abstract = entity.getS_abstract();
        if (s_abstract != null) {
            stmt.bindString(8, s_abstract);
        }
 
        String s_html = entity.getS_html();
        if (s_html != null) {
            stmt.bindString(9, s_html);
        }
 
        String s_url = entity.getS_url();
        if (s_url != null) {
            stmt.bindString(10, s_url);
        }
 
        String s_type = entity.getS_type();
        if (s_type != null) {
            stmt.bindString(11, s_type);
        }
 
        String f_groups_id = entity.getF_groups_id();
        if (f_groups_id != null) {
            stmt.bindString(12, f_groups_id);
        }
 
        String f_groups_layer = entity.getF_groups_layer();
        if (f_groups_layer != null) {
            stmt.bindString(13, f_groups_layer);
        }
 
        String s_isdel = entity.getS_isdel();
        if (s_isdel != null) {
            stmt.bindString(14, s_isdel);
        }
 
        Integer s_read_num = entity.getS_read_num();
        if (s_read_num != null) {
            stmt.bindLong(15, s_read_num);
        }
 
        Integer s_click_num = entity.getS_click_num();
        if (s_click_num != null) {
            stmt.bindLong(16, s_click_num);
        }
 
        Integer s_forward_num = entity.getS_forward_num();
        if (s_forward_num != null) {
            stmt.bindLong(17, s_forward_num);
        }
 
        Integer s_collect_num = entity.getS_collect_num();
        if (s_collect_num != null) {
            stmt.bindLong(18, s_collect_num);
        }
 
        Integer s_like_num = entity.getS_like_num();
        if (s_like_num != null) {
            stmt.bindLong(19, s_like_num);
        }
 
        Integer s_adv_num = entity.getS_adv_num();
        if (s_adv_num != null) {
            stmt.bindLong(20, s_adv_num);
        }
 
        Integer s_reward_num = entity.getS_reward_num();
        if (s_reward_num != null) {
            stmt.bindLong(21, s_reward_num);
        }
 
        String s_creator = entity.getS_creator();
        if (s_creator != null) {
            stmt.bindString(22, s_creator);
        }
 
        String s_creater_time = entity.getS_creater_time();
        if (s_creater_time != null) {
            stmt.bindString(23, s_creater_time);
        }
 
        String s_update_time = entity.getS_update_time();
        if (s_update_time != null) {
            stmt.bindString(24, s_update_time);
        }
 
        Integer s_isPerm = entity.getS_isPerm();
        if (s_isPerm != null) {
            stmt.bindLong(25, s_isPerm);
        }
 
        String fileName = entity.getFileName();
        if (fileName != null) {
            stmt.bindString(26, fileName);
        }
 
        Integer fileSize = entity.getFileSize();
        if (fileSize != null) {
            stmt.bindLong(27, fileSize);
        }
 
        String platId = entity.getPlatId();
        if (platId != null) {
            stmt.bindString(28, platId);
        }
 
        String platName = entity.getPlatName();
        if (platName != null) {
            stmt.bindString(29, platName);
        }
 
        String platImg = entity.getPlatImg();
        if (platImg != null) {
            stmt.bindString(30, platImg);
        }
 
        String collectId = entity.getCollectId();
        if (collectId != null) {
            stmt.bindString(31, collectId);
        }
 
        String likeId = entity.getLikeId();
        if (likeId != null) {
            stmt.bindString(32, likeId);
        }
 
        String readId = entity.getReadId();
        if (readId != null) {
            stmt.bindString(33, readId);
        }
 
        String isTuiguang = entity.getIsTuiguang();
        if (isTuiguang != null) {
            stmt.bindString(34, isTuiguang);
        }
 
        Integer isLocalUpload = entity.getIsLocalUpload();
        if (isLocalUpload != null) {
            stmt.bindLong(35, isLocalUpload);
        }
 
        String mid = entity.getMid();
        if (mid != null) {
            stmt.bindString(36, mid);
        }
 
        String isFollow = entity.getIsFollow();
        if (isFollow != null) {
            stmt.bindString(37, isFollow);
        }
 
        String commentId = entity.getCommentId();
        if (commentId != null) {
            stmt.bindString(38, commentId);
        }
 
        Integer s_comment_num = entity.getS_comment_num();
        if (s_comment_num != null) {
            stmt.bindLong(39, s_comment_num);
        }
    }

    @Override
    public Long readKey(Cursor cursor, int offset) {
        return cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0);
    }    

    @Override
    public Article readEntity(Cursor cursor, int offset) {
        Article entity = new Article( //
            cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0), // id
            cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1), // p_id
            cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2), // s_title
            cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3), // s_author
            cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4), // s_pic
            cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5), // s_category
            cursor.isNull(offset + 6) ? null : cursor.getString(offset + 6), // s_tag
            cursor.isNull(offset + 7) ? null : cursor.getString(offset + 7), // s_abstract
            cursor.isNull(offset + 8) ? null : cursor.getString(offset + 8), // s_html
            cursor.isNull(offset + 9) ? null : cursor.getString(offset + 9), // s_url
            cursor.isNull(offset + 10) ? null : cursor.getString(offset + 10), // s_type
            cursor.isNull(offset + 11) ? null : cursor.getString(offset + 11), // f_groups_id
            cursor.isNull(offset + 12) ? null : cursor.getString(offset + 12), // f_groups_layer
            cursor.isNull(offset + 13) ? null : cursor.getString(offset + 13), // s_isdel
            cursor.isNull(offset + 14) ? null : cursor.getInt(offset + 14), // s_read_num
            cursor.isNull(offset + 15) ? null : cursor.getInt(offset + 15), // s_click_num
            cursor.isNull(offset + 16) ? null : cursor.getInt(offset + 16), // s_forward_num
            cursor.isNull(offset + 17) ? null : cursor.getInt(offset + 17), // s_collect_num
            cursor.isNull(offset + 18) ? null : cursor.getInt(offset + 18), // s_like_num
            cursor.isNull(offset + 19) ? null : cursor.getInt(offset + 19), // s_adv_num
            cursor.isNull(offset + 20) ? null : cursor.getInt(offset + 20), // s_reward_num
            cursor.isNull(offset + 21) ? null : cursor.getString(offset + 21), // s_creator
            cursor.isNull(offset + 22) ? null : cursor.getString(offset + 22), // s_creater_time
            cursor.isNull(offset + 23) ? null : cursor.getString(offset + 23), // s_update_time
            cursor.isNull(offset + 24) ? null : cursor.getInt(offset + 24), // s_isPerm
            cursor.isNull(offset + 25) ? null : cursor.getString(offset + 25), // fileName
            cursor.isNull(offset + 26) ? null : cursor.getInt(offset + 26), // fileSize
            cursor.isNull(offset + 27) ? null : cursor.getString(offset + 27), // platId
            cursor.isNull(offset + 28) ? null : cursor.getString(offset + 28), // platName
            cursor.isNull(offset + 29) ? null : cursor.getString(offset + 29), // platImg
            cursor.isNull(offset + 30) ? null : cursor.getString(offset + 30), // collectId
            cursor.isNull(offset + 31) ? null : cursor.getString(offset + 31), // likeId
            cursor.isNull(offset + 32) ? null : cursor.getString(offset + 32), // readId
            cursor.isNull(offset + 33) ? null : cursor.getString(offset + 33), // isTuiguang
            cursor.isNull(offset + 34) ? null : cursor.getInt(offset + 34), // isLocalUpload
            cursor.isNull(offset + 35) ? null : cursor.getString(offset + 35), // mid
            cursor.isNull(offset + 36) ? null : cursor.getString(offset + 36), // isFollow
            cursor.isNull(offset + 37) ? null : cursor.getString(offset + 37), // commentId
            cursor.isNull(offset + 38) ? null : cursor.getInt(offset + 38) // s_comment_num
        );
        return entity;
    }
     
    @Override
    public void readEntity(Cursor cursor, Article entity, int offset) {
        entity.setId(cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0));
        entity.setP_id(cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1));
        entity.setS_title(cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2));
        entity.setS_author(cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3));
        entity.setS_pic(cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4));
        entity.setS_category(cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5));
        entity.setS_tag(cursor.isNull(offset + 6) ? null : cursor.getString(offset + 6));
        entity.setS_abstract(cursor.isNull(offset + 7) ? null : cursor.getString(offset + 7));
        entity.setS_html(cursor.isNull(offset + 8) ? null : cursor.getString(offset + 8));
        entity.setS_url(cursor.isNull(offset + 9) ? null : cursor.getString(offset + 9));
        entity.setS_type(cursor.isNull(offset + 10) ? null : cursor.getString(offset + 10));
        entity.setF_groups_id(cursor.isNull(offset + 11) ? null : cursor.getString(offset + 11));
        entity.setF_groups_layer(cursor.isNull(offset + 12) ? null : cursor.getString(offset + 12));
        entity.setS_isdel(cursor.isNull(offset + 13) ? null : cursor.getString(offset + 13));
        entity.setS_read_num(cursor.isNull(offset + 14) ? null : cursor.getInt(offset + 14));
        entity.setS_click_num(cursor.isNull(offset + 15) ? null : cursor.getInt(offset + 15));
        entity.setS_forward_num(cursor.isNull(offset + 16) ? null : cursor.getInt(offset + 16));
        entity.setS_collect_num(cursor.isNull(offset + 17) ? null : cursor.getInt(offset + 17));
        entity.setS_like_num(cursor.isNull(offset + 18) ? null : cursor.getInt(offset + 18));
        entity.setS_adv_num(cursor.isNull(offset + 19) ? null : cursor.getInt(offset + 19));
        entity.setS_reward_num(cursor.isNull(offset + 20) ? null : cursor.getInt(offset + 20));
        entity.setS_creator(cursor.isNull(offset + 21) ? null : cursor.getString(offset + 21));
        entity.setS_creater_time(cursor.isNull(offset + 22) ? null : cursor.getString(offset + 22));
        entity.setS_update_time(cursor.isNull(offset + 23) ? null : cursor.getString(offset + 23));
        entity.setS_isPerm(cursor.isNull(offset + 24) ? null : cursor.getInt(offset + 24));
        entity.setFileName(cursor.isNull(offset + 25) ? null : cursor.getString(offset + 25));
        entity.setFileSize(cursor.isNull(offset + 26) ? null : cursor.getInt(offset + 26));
        entity.setPlatId(cursor.isNull(offset + 27) ? null : cursor.getString(offset + 27));
        entity.setPlatName(cursor.isNull(offset + 28) ? null : cursor.getString(offset + 28));
        entity.setPlatImg(cursor.isNull(offset + 29) ? null : cursor.getString(offset + 29));
        entity.setCollectId(cursor.isNull(offset + 30) ? null : cursor.getString(offset + 30));
        entity.setLikeId(cursor.isNull(offset + 31) ? null : cursor.getString(offset + 31));
        entity.setReadId(cursor.isNull(offset + 32) ? null : cursor.getString(offset + 32));
        entity.setIsTuiguang(cursor.isNull(offset + 33) ? null : cursor.getString(offset + 33));
        entity.setIsLocalUpload(cursor.isNull(offset + 34) ? null : cursor.getInt(offset + 34));
        entity.setMid(cursor.isNull(offset + 35) ? null : cursor.getString(offset + 35));
        entity.setIsFollow(cursor.isNull(offset + 36) ? null : cursor.getString(offset + 36));
        entity.setCommentId(cursor.isNull(offset + 37) ? null : cursor.getString(offset + 37));
        entity.setS_comment_num(cursor.isNull(offset + 38) ? null : cursor.getInt(offset + 38));
     }
    
    @Override
    protected final Long updateKeyAfterInsert(Article entity, long rowId) {
        entity.setId(rowId);
        return rowId;
    }
    
    @Override
    public Long getKey(Article entity) {
        if(entity != null) {
            return entity.getId();
        } else {
            return null;
        }
    }

    @Override
    public boolean hasKey(Article entity) {
        return entity.getId() != null;
    }

    @Override
    protected final boolean isEntityUpdateable() {
        return true;
    }
    
}
